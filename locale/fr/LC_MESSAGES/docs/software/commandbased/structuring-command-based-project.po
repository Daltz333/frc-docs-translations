# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Kaitlyn Kenwell <redrield@gmail.com>, 2020
# Sami G.-D., 2020
# Regis Bekale <rbekale@robotiquefirstquebec.org>, 2020
# Dalton Smith <daltzsmith@gmail.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-31 04:18+0000\n"
"PO-Revision-Date: 2020-04-25 02:02+0000\n"
"Last-Translator: Dalton Smith <daltzsmith@gmail.com>, 2020\n"
"Language-Team: French (Canada) (https://www.transifex.com/wpilib/teams/109324/fr_CA/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr_CA\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:2
msgid "Structuring a Command-Based Robot Project"
msgstr "Structurer un projet de robot orienté commande"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:4
msgid ""
"While users are free to use the command-based libraries however they like "
"(and advanced users are encouraged to do so), new users may want some "
"guidance on how to structure a basic command-based robot project."
msgstr ""
"Alors que les utilisateurs sont libres d'utiliser les bibliothèques "
"orientées commande comme ils le veulent (et les utilisateurs avancés sont "
"encouragés à le faire), les nouveaux utilisateurs pourraient avoir besoin de"
" conseils sur la manière de structurer un projet de robot orienté commande "
"de base."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:8
msgid "The root package/directory generally will contain four classes:"
msgstr "Le package/répertoire racine contient généralement quatre classes :"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:10
msgid ""
"``Main``, which is the main robot application (Java only). New users *should"
" not* touch this class. ``Robot``, which is responsible for the main control"
" flow of the robot code. ``RobotContainer``, which holds robot subsystems "
"and commands, and is where most of the declarative robot setup (e.g. button "
"bindings) is performed. ``Constants``, which holds globally-accessible "
"constants to be used throughout the robot."
msgstr "this is a test translation, please remove"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:12
msgid ""
"The root directory will also contain two sub-packages/sub-directories: "
"``Subsystems`` contains all user-defined subsystem classes. ``Commands`` "
"contains all user-defined command classes."
msgstr ""
"Le répertoire racine contiendra aussi deux sous-packages/sous-répertoires : "
"``Subsystems`` contiendra toutes les classes sous-systèmes définies par "
"l'utilisateur. ``Commands`` contiendra tout les classes commandes définies "
"par l'utilisateur."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:15
msgid "Robot"
msgstr "Robot"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:29
msgid ""
"In Java, an instance of ``RobotContainer`` should be constructed during the "
"``robotInit()`` method - this is important, as most of the declarative robot"
" setup will be called from the ``RobotContainer`` constructor."
msgstr ""
"En Java, une instance de ``RobotContainer`` devrait être construite dans la "
"méthode ``robotInit()`` - cela est important, car l'essentiel de la "
"configuration déclarative du robot sera appelé depuis le constructeur "
"``RobotContainer``."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:31
msgid ""
"In C++, this is not needed as RobotContainer is a value member and will be "
"constructed during the construction of ``Robot``."
msgstr ""
"En C++, ce n'est pas nécessaire, car RobotContainer est un membre valeur et "
"va être construit durant la construction de ``Robot``."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:51
msgid ""
"The inclusion of the ``CommandScheduler.getInstance().run()`` call in the "
"``robotPeriodic()`` method is essential; without this call, the scheduler "
"will not execute any scheduled commands. Since ``TimedRobot`` runs with a "
"default main loop frequency of 50Hz, this is the frequency with which "
"periodic command and subsystem methods will be called. It is not recommended"
" for new users to call this method from anywhere else in their code."
msgstr ""
"L'inclusion de l'appel ``CommandScheduler.getInstance().run()`` dans la "
"méthode ``robotPeriodic()`` est essentielle; sans cela, le planificateur "
"n'exécutera pas les commandes programmées. Puisque ``TimedRobot`` s'exécute "
"à la fréquence de la boucle principale (50Hz par défaut), c'est la fréquence"
" à laquelle les commandes périodiques et les méthodes de sous-systèmes "
"s'exécuteront. Il n'est pas recommandé pour les utilisateurs novices "
"d'appeler cette méthode ailleurs dans leur code."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:71
msgid ""
"The ``autonomousInit()`` method schedules an autonomous command returned by "
"the ``RobotContainer`` instance. The logic for selecting which autonomous "
"command to run can be handled inside of ``RobotContainer``."
msgstr ""
"La méthode ``autonomousInit()`` planifie une commande autonome retournée par"
" l'instance de ``RobotContainer``. La logique pour sélectionner quelle "
"commande autonome sera exécutée peut être gérée à l'intérieur de "
"``RobotContainer``."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:91
msgid ""
"The ``teleopInit()`` method cancels any still-running autonomous commands. "
"This is generally good practice."
msgstr ""
"La méthode ``teleopInit()`` annulera toutes les commandes du mode autonome "
"qui sont en train d'être exécutées. C'est généralement une bonne pratique."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:93
msgid ""
"Advanced users are free to add additional code to the various init and "
"periodic methods as they see fit; however, it should be noted that including"
" large amounts of imperative robot code in ``Robot.java`` is contrary to the"
" declarative design philosophy of the command-based paradigm, and can result"
" in confusingly-structured/disorganized code."
msgstr ""
"Les utilisateurs avancés peuvent ajouter du code additionnel aux méthodes "
"``init`` et ``periodic`` comme ils l'entendent; cependant, il faut noter que"
" le fait d'inclure de grandes quantités de code robot impératif dans "
"``Robot.java`` va à l'encontre de la philosophie de conception déclarative "
"du paradigme orienté commande, et peut entraîner un code structuré de "
"manière confuse/désorganisée."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:96
msgid "RobotContainer"
msgstr "RobotContainer"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:118
msgid ""
"Notice that subsystems are declared as private fields in ``RobotContainer``."
" This is in stark contrast to the previous incarnation of the command-based "
"framework, but is much more-aligned with agreed-upon object-oriented best-"
"practices. If subsystems are declared as global variables, it allows the "
"user to access them from anywhere in the code. While this can make certain "
"things easier (for example, there would be no need to pass subsystems to "
"commands in order for those commands to access them), it makes the control "
"flow of the program much harder to keep track of as it is not immediately "
"obvious which parts of the code can change or be changed by which other "
"parts of the code. This also circumvents the ability of the resource-"
"management system to do its job, as ease-of-access makes it easy for users "
"to accidentally make conflicting calls to subsystem methods outside of the "
"resource-managed commands."
msgstr ""
"Notez que les sous-systèmes sont déclarés comme des champs privés dans "
"``RobotContainer``. Ceci est en contraste notable avec l'incarnation "
"précédente du cadre orienté commande, mais est beaucoup plus aligné sur les "
"meilleures pratiques orientées objet convenues. Si les sous-systèmes sont "
"déclarés comme des variables globales, cela permet à l'utilisateur d'y "
"accéder n'importe où dans le code. Alors que cela peut faciliter certaines "
"choses (par exemple, il n'y aurait pas besoin de passer les sous-systèmes "
"aux commandes pour que ces commandes puissent y avoir accès), cela rend "
"aussi le flux de contrôle du programme beaucoup plus difficile à suivre, car"
" on ne peut pas voir immédiatement quelles parties du code pourraient "
"changer ou pourraient être changées par d'autres parties du code. Cela peut "
"également empêcher le système de gestion de ressources de faire son travail,"
" car la facilité d'accès rend facile pour un utilisateur de faire un appel à"
" une méthode de sous-systèmes hors des commandes  gérées par les ressources."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:138
msgid ""
"Since subsystems are declared as private members, they must be explicitly "
"passed to commands (a pattern called \"dependency injection\") in order for "
"those commands to call methods on them.  This is done here with "
"``ExampleCommand``, which is passed a pointer to an ``ExampleSubsystem``."
msgstr ""
"Puisque les sous-systèmes sont déclarés comme des membres privés, ils "
"doivent être passés explicitement aux commandes (un modèle nommé "
"\"dependency injection\") pour que les commandes puissent appeler leurs "
"méthodes. Cela est fait ici avec ``ExampleCommand``, qui se fait passer un "
"pointeur vers un ``ExampleSubsystem``."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:158
msgid ""
"As mentioned before, the ``RobotContainer()`` constructor is where most of "
"the declarative setup for the robot should take place, including button "
"bindings, configuring autonomous selectors, etc. If the constructor gets too"
" “busy,” users are encouraged to migrate code into separate subroutines "
"(such as the ``configureButtonBindings()`` method included by default) which"
" are called from the constructor."
msgstr ""
"Comme indiqué précédemment, le constructeur ``RobotContainer()`` est le lieu"
" où l'essentiel de la configuration déclarative pour le robot devrait "
"prendre place, incluant la liaison des boutons, la configuration des "
"sélectionneurs autonome, etc. Si le constructeur devient trop « occupé », "
"les utilisateurs sont encouragés à déplacer du code dans des sous-routines "
"séparées (comme la méthode ``configureButtonBindings()`` incluse par défaut)"
" qui sont appelées par le constructeur."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:178
msgid ""
"Finally, the ``getAutonomousCommand()`` method provides a convenient way for"
" users to send their selected autonomous command to the main ``Robot`` class"
" (which needs access to it to schedule it when autonomous starts)."
msgstr ""
"Finalement, la méthode ``getAutonomousCommand()`` fournit un moyen pratique "
"à l'utilisateur pour envoyer sa commande autonome sélectionnée à la classe "
"``Robot`` principale (qui a besoin d'y accèder pour la planifier au début de"
" la période autonome)."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:181
msgid "Constants"
msgstr "Constants"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:185
msgid ""
"In Java, all constants should be declared ``public static final`` so that "
"they are globally accessible and cannot be changed.  In C++, all constants "
"should be ``constexpr``."
msgstr ""
"En Java, toutes les constantes devraient être déclarées ``public static "
"final`` pour qu'elles soient accessibles globalement et ne puissent pas être"
" changées. En C++, toutes les constantes devraient être ``constexpr``."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:187
msgid ""
"For more illustrative examples of what a ``constants`` class should look "
"like in practice, see those of the various command-based example projects:"
msgstr ""
"Pour des exemples plus illustratifs de ce à quoi devrait ressembler une "
"classe ``Constants`` en pratique, voir les classes des projets exemples "
"orientés commande :"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:193
msgid ""
"In Java, it is recommended that the constants be used from other classes by "
"statically importing the necessary inner class. An ``import static`` "
"statement imports the static namespace of a class into the class in which "
"you are working, so that any ``static`` constants can be referenced directly"
" as if they had been defined in that class.  In C++, the same effect can be "
"attained with ``using namespace``:"
msgstr ""
"En java, il est recommandé que les constantes  soient utilisées à partir "
"d'autres classes par l'importation statique de la classe intérieure "
"nécessaire. Une déclaration ``import static`` importe l'espace de nom "
"statique d'une classe dans la classe dans laquelle vous travaillez pour que "
"les constantes ``static`` puissent être référencées directement comme si "
"elles étaient définies dans cette classe. En C++, la même chose peut être "
"faite avec ``using namespace``:"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:206
msgid "Subsystems"
msgstr "Subsystems"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:208
msgid "User-defined subsystems should go in this package/directory."
msgstr ""
"Les sous-systèmes définis par l'utilisateur devraient entrer dans ce "
"package/répertoire."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:211
msgid "Commands"
msgstr "Commands"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:213
msgid "User-defined commands should go in this package/directory."
msgstr ""
"Les commandes définies par l’utilisateur devraient entrer dans cet "
"package/répertoire."
