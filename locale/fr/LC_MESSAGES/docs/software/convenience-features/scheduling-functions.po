# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Kaitlyn Kenwell <redrield@gmail.com>, 2020
# Andre Theberge <atheberge2@videotron.ca>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-09 04:14+0000\n"
"PO-Revision-Date: 2020-11-02 16:21+0000\n"
"Last-Translator: Andre Theberge <atheberge2@videotron.ca>, 2020\n"
"Language-Team: French (Canada) (https://www.transifex.com/wpilib/teams/109324/fr_CA/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr_CA\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/convenience-features/scheduling-functions.rst:2
msgid "Scheduling Functions at Custom Frequencies"
msgstr "Planification des Fonctions à des Fréquences Personnalisées"

#: ../../frc-docs/source/docs/software/convenience-features/scheduling-functions.rst:3
msgid ""
"``TimedRobot``'s ``addPeriodic()`` method allows one to run custom methods "
"at a rate faster than the default ``TimedRobot`` periodic update rate (20 "
"ms). Previously, teams had to make a ``Notifier`` to run feedback "
"controllers more often than the ``TimedRobot`` loop period of 20 ms (running"
" ``TimedRobot`` more often than this is not advised). Now, users can run "
"feedback controllers more often than the main robot loop, but synchronously "
"with the ``TimedRobot`` periodic functions, eliminating potential thread "
"safety issues."
msgstr ""
"La méthode ``addPeriodic()`` de ``TimedRobot`` nous permettons d'exécuter "
"des méthodes personnalisées à un rythme plus rapide que le taux de mise à "
"jour périodique par défault de ``TimedRobot`` (20 ms). Précédemment, les "
"équipes auraient dû créer un ``Notifier`` pour exécuter les contrôleurs de "
"rétroaction plus souvent que la période de boucle de ``TimedRobot`` de 20 ms"
" (Exécuter ``TimedRobot`` plus souvent que ça n'est pas conseillé). "
"Maintenant, les utilisateurs peuvent exécuter les contrôleurs de rétroaction"
" plus souvent que la boucle principale du robot, mais de manière synchrone "
"avec les fonctions périodiques de ``TimedRobot``, ce qui élimine les "
"problèmes potentiels de sécurité des threads."

#: ../../frc-docs/source/docs/software/convenience-features/scheduling-functions.rst:5
msgid ""
"The ``addPeriodic()`` (Java) / ``AddPeriodic()`` (C++) method takes in a "
"lambda (the function to run), along with the requested period and an "
"optional offset from the common starting time. The optional third argument "
"is useful for scheduling a function in a different timeslot relative to the "
"other ``TimedRobot`` periodic methods."
msgstr ""
"La méthode ``addPeriodic()`` (Java) / ``AddPeriodic()`` (C++) prend un "
"lambda (la fonction à exécuter), ainsi que la période demandée et un offset "
"optionnel à partir de l'heure de départ commune. La troisième argument "
"optionnel est utile pour la planification d'une fonction dans un créneau "
"horaire différent par rapport aux autre méthodes périodiques de "
"``TimedRobot``."

#: ../../frc-docs/source/docs/software/convenience-features/scheduling-functions.rst:7
msgid ""
"The units for the period and offset are seconds in Java. In C++, the "
":ref:`units library <docs/software/basic-programming/cpp-units:The C++ Units"
" Library>` can be used to specify a period and offset in any time unit."
msgstr ""
"Les unités pour la période et le décalage sont les secondes en Java. En C "
"++, la bibliothèque d'unités :ref: `<docs / software / basic-programming / "
"cpp-units: The C ++ Units Library>` peut être utilisée pour spécifier une "
"période et un décalage dans n'importe quelle unité de temps."
