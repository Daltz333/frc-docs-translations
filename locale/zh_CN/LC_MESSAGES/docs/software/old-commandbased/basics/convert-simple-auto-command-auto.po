# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Michael Zhao <haitong1110@126.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-04 16:18+0000\n"
"PO-Revision-Date: 2020-04-25 02:04+0000\n"
"Last-Translator: Michael Zhao <haitong1110@126.com>, 2020\n"
"Language-Team: Chinese (China) (https://www.transifex.com/wpilib/teams/109324/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../frc-docs/source/docs/software/old-commandbased/basics/convert-simple-auto-command-auto.rst:2
msgid "Converting a Simple Autonomous Program to Command-Based"
msgstr "将简单的自动程序转换为基于命令的程序"

#: ../../frc-docs/source/docs/software/old-commandbased/basics/convert-simple-auto-command-auto.rst:4
msgid ""
"This documentation describes the use of the legacy command-based library. "
"While this documentation has been preserved to help teams that have yet to "
"do so, teams are strongly encouraged to migrate to the :ref:`new command-"
"based library <docs/software/commandbased/index:Command-Based Programming>`."
msgstr ""
"本文档描述了旧式基于命令的库的用法。尽管保留了该文档以帮助尚未这样做的团队，但强烈建议团队迁移到新的基于命令的库<docs/software/commandbased/index"
":Command-Based Programming>。"

#: ../../frc-docs/source/docs/software/old-commandbased/basics/convert-simple-auto-command-auto.rst:6
msgid ""
"This document describes how to rewrite a simple autonomous into a command "
"based autonomous. Hopefully, going through this process will help those more"
" familiar with the older simple autonomous method understand the command "
"based method better. By re-writing it as a command based program, there are "
"several benefits in terms of testing and reuse. For this example, all of the"
" logic is abstracted out into functions primarily so that the focus of this "
"example can be on the structure."
msgstr ""
"本文档介绍了如何将简单的自动体重写为基于指令的自动体。希望通过此过程可以帮助那些更熟悉旧的简单自动方法的人更好地理解基于指令的方法。通过将其重写为基于指令的程序，在测试和重用方面有许多好处。对于此示例，所有逻辑主要被抽象为功能，因此该示例的重点可以放在结构上。"

#: ../../frc-docs/source/docs/software/old-commandbased/basics/convert-simple-auto-command-auto.rst:9
msgid "Initial Autonomous Code"
msgstr "初始自动代码"

#: ../../frc-docs/source/docs/software/old-commandbased/basics/convert-simple-auto-command-auto.rst:63
msgid ""
"The code above aims a shooter, then it spins up a wheel and, finally, once "
"the wheel is running at the desired speed, it shoots the frisbee. The code "
"consists of three distinct actions: aim, spin up to speed and shoot the "
"Frisbee. The first two actions follow a command pattern that consists of "
"four parts:"
msgstr ""
"上面的代码以射手为目标，然后使飞轮旋转，最后，一旦飞轮以所需的速度运行，就射击飞盘。该代码包括三个不同的动作：瞄准，加速旋转并射击飞盘。前两个动作遵循由四个部分组成的指令模式："

#: ../../frc-docs/source/docs/software/old-commandbased/basics/convert-simple-auto-command-auto.rst:65
msgid "Initialization: prepares for the action to be performed."
msgstr "初始化：为要执行的动作做准备。"

#: ../../frc-docs/source/docs/software/old-commandbased/basics/convert-simple-auto-command-auto.rst:66
msgid "Condition: keeps the loop going while it is satisfied."
msgstr "条件：在满足条件的情况下使循环继续进行。"

#: ../../frc-docs/source/docs/software/old-commandbased/basics/convert-simple-auto-command-auto.rst:67
msgid ""
"Execution: repeatedly updates the code to try to make the condition false."
msgstr "执行：重复更新代码以尝试使条件为假。"

#: ../../frc-docs/source/docs/software/old-commandbased/basics/convert-simple-auto-command-auto.rst:68
msgid ""
"End: performs any cleanup and final task before moving on to the next "
"action."
msgstr "结束：执行任何清理和最终任务，然后再继续执行下一个操作。"

#: ../../frc-docs/source/docs/software/old-commandbased/basics/convert-simple-auto-command-auto.rst:70
msgid ""
"The last action only has an explicit initialize, though depending on how you"
" read it, it can implicitly end under a number of conditions. The most "
"obvious one two in this case are when it's done shooting or when autonomous "
"has ended."
msgstr ""
"最后一个动作只有一个显式的初始化，尽管取决于您的阅读方式，它在许多情况下都可以隐式结束。在这种情况下，最明显的两个是完成拍摄或自主拍摄结束的时间。"

#: ../../frc-docs/source/docs/software/old-commandbased/basics/convert-simple-auto-command-auto.rst:73
msgid "Rewriting it as Commands"
msgstr "将其重写为指令"

#: ../../frc-docs/source/docs/software/old-commandbased/basics/convert-simple-auto-command-auto.rst:99
msgid ""
"The same code can be rewritten as a ``CommandGroup`` that groups the three "
"actions, where each action is written as it's own command. First, the "
"command group will be written, then the commands will be written to "
"accomplish the three actions. This code is pretty straightforward. It does "
"the three actions sequentially, that is one after the other. Line 3 aims the"
" robot, then line 4 spins the shooter up and, finally, line 5 actually "
"shoots the frisbee. The ``addSequential()`` method sets it so that these "
"commands run one after the other."
msgstr ""
"可以将相同的代码重写为将三个动作组合在一起的“ "
"CommandGroup”，其中每个动作均作为自己的指令编写。首先，将写入指令组，然后将写入指令以完成这三个动作。这段代码非常简单。它依次执行三个动作，一个接一个。第3行对准机器人，然后第4行旋转射手，最后，第5行实际上发射飞盘。"
" addSequential（）方法对其进行设置，以便这些指令一个接一个地运行。"

#: ../../frc-docs/source/docs/software/old-commandbased/basics/convert-simple-auto-command-auto.rst:102
msgid "The Aim Command"
msgstr "瞄准指令"

#: ../../frc-docs/source/docs/software/old-commandbased/basics/convert-simple-auto-command-auto.rst:180
msgid ""
"As you can see, the command reflects the four parts of the action we "
"discussed earlier. It also has the ``interrupted()`` method which will be "
"discussed below. The other significant difference is that the condition in "
"the ``isFinished()`` is the opposite of what you would put as the condition "
"of the while loop, it returns true when you want to stop running the execute"
" method as opposed to false. Initializing, executing and ending are exactly "
"the same, they just go within their respective method to indicate what they "
"do."
msgstr ""
"如您所见，该指令反映了我们前面讨论的操作的四个部分。它还具有“ "
"interrupted（）”方法，将在下面进行讨论。另一个明显的不同是，isFinished（）中的条件与while循环的条件相反，当您要停止运行execute方法时，返回true，而不是false。初始化，执行和结束是完全相同的，它们只是进入各自的方法以指示其作用。"

#: ../../frc-docs/source/docs/software/old-commandbased/basics/convert-simple-auto-command-auto.rst:183
msgid "SpinUpShooter Command"
msgstr "SpinUpShooter指令"

#: ../../frc-docs/source/docs/software/old-commandbased/basics/convert-simple-auto-command-auto.rst:262
msgid ""
"The spin up shooter command is very similar to the Aim command, it's the "
"same basic idea."
msgstr "旋转射击游戏指令与Aim指令非常相似，这是相同的基本思想。"

#: ../../frc-docs/source/docs/software/old-commandbased/basics/convert-simple-auto-command-auto.rst:265
msgid "Shoot Command"
msgstr "射击指令"

#: ../../frc-docs/source/docs/software/old-commandbased/basics/convert-simple-auto-command-auto.rst:341
msgid ""
"The shoot command is the same basic transformation yet again, however it is "
"set to end immediately. In CommandBased programming, it is better to have "
"it's isFinished method return true when the act of shooting is finished, but"
" this is a more direct translation of the original code."
msgstr ""
"Shoot指令再次是相同的基本转换，但是将其设置为立即结束。在CommandBased编程中，最好是在完成射击操作后将isFinished方法返回true，但这是对原始代码的更直接翻译。"

#: ../../frc-docs/source/docs/software/old-commandbased/basics/convert-simple-auto-command-auto.rst:344
msgid "Benefits of Command-Based"
msgstr "基于指令的好处"

#: ../../frc-docs/source/docs/software/old-commandbased/basics/convert-simple-auto-command-auto.rst:346
msgid ""
"Why bother re-writing the code as CommandBased? Writing the code in the "
"CommandBased style offers a number of benefits:"
msgstr "为什么要麻烦将代码重写为CommandBased？以CommandBased风格编写代码有许多好处："

#: ../../frc-docs/source/docs/software/old-commandbased/basics/convert-simple-auto-command-auto.rst:348
msgid ""
"**Re-Usability** - You can reuse the same command in teleop and multiple "
"autonomous modes. They all reference the same code, so if you need to tweak "
"it to tune it or fix it, you can do it in one place without having to make "
"the same edits in multiple places."
msgstr ""
"**可重用性**-您可以在Teleop和多个自动模式下重用同一指令。它们都引用相同的代码，因此，如果您需要对其进行调整以对其进行调整或修复，则可以在一个位置进行操作，而不必在多个位置进行相同的编辑。"

#: ../../frc-docs/source/docs/software/old-commandbased/basics/convert-simple-auto-command-auto.rst:349
msgid ""
"**Testability** - You can test each part using tools such as the "
"ShuffleBoard to test parts of the autonomous. Once you put them together, "
"you'll have more confidence that each piece works as desired."
msgstr "**可测试性**-您可以使用ShuffleBoard等工具测试每个零件，以测试自主零件。将它们放在一起后，您将更有信心按需工作。"

#: ../../frc-docs/source/docs/software/old-commandbased/basics/convert-simple-auto-command-auto.rst:350
msgid ""
"**Parallelization** - If you wanted this code to aim and spin up the shooter"
" at the same time, it's trivial with CommandBased programming. Just use "
"``AddParallel()`` instead of ``AddSequential()`` when adding the Aim command"
" and now aiming and spinning up will happen simultaneously."
msgstr ""
"**并行化**-如果您希望此代码同时瞄准并旋转射击者，那么使用CommandBased编程就显得微不足道了。添加Aim指令时，只需使用AddParallel（）而不是AddSequential（）即可，现在瞄准和旋转将同时发生。"

#: ../../frc-docs/source/docs/software/old-commandbased/basics/convert-simple-auto-command-auto.rst:351
msgid ""
"**Interruptibility** - Commands are interruptible, this provides the ability"
" to exit a command early, a task that is much harder in the equivalent while"
" loop based code."
msgstr "**可中断性**-指令是可中断的，这提供了提早退出指令的能力，这在基于while循环的代码中要困难得多。"
