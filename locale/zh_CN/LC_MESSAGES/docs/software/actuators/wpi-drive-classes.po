# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# 怡静 陆 <2238710874@qq.com>, 2021
# Tianrui Wu <tw2789@columbia.edu>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-02-16 04:13+0000\n"
"PO-Revision-Date: 2020-04-25 02:01+0000\n"
"Last-Translator: Tianrui Wu <tw2789@columbia.edu>, 2021\n"
"Language-Team: Chinese (China) (https://www.transifex.com/wpilib/teams/109324/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:4
msgid "Using the WPILib Classes to Drive your Robot"
msgstr "使用 WPILib 类驱动机器人"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:6
msgid ""
"WPILib includes many classes to help make your robot get driving faster."
msgstr "WPILib 包含了一些使控制机器人更方便的类。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:9
msgid "Standard drivetrains"
msgstr "标准动力底盘"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:12
msgid "Differential Drive Robots"
msgstr "差速驱动机器人"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:16
msgid ""
"These drive bases typically have two or more in-line traction or omni  "
"wheels per side (e.g., 6WD or 8WD) and may also be known as  \"skid-steer\","
" \"tank drive\", or \"West Coast Drive\". The Kit of Parts  drivetrain is an"
" example of a differential drive. These drivetrains are capable of driving "
"forward/backward and can turn by driving the two sides in opposite "
"directions causing the wheels to skid sideways. These drivetrains are not "
"capable of sideways translational movement."
msgstr ""
"这些底盘每侧通常具有两个或多个串联牵引轮或全向轮 (例如6WD或8WD)。KoP "
"的底盘便是差速驱动底盘的一个样例。这些底盘能够向前或向后行驶，并且可以通过向相反方向驱动底盘轮转动，从而实现转向。这些底盘无法横向平移运动。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:19
msgid "Mecanum Drive"
msgstr "麦克纳姆驱动"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:23
msgid ""
"Mecanum drive is a method of driving using specially designed wheels that "
"allow the robot to drive in any direction without changing the orientation "
"of the robot. A robot with a conventional drivetrain (all wheels pointing in"
" the same direction) must turn in the direction it needs to drive. A mecanum"
" robot can move in any direction without first turning and is called a "
"holonomic drive. The wheels (shown on this robot) have rollers that cause "
"the forces from driving to be applied at a 45 degree angle rather than "
"straight forward as in the case of a conventional drive."
msgstr ""
"麦克纳姆驱动是一种使用特殊设计的轮子进行驱动的方法，该轮子使机器人可以在不改变朝向的情况下向任何方向驱动。具有传统动力底盘 (所有车轮指向相同方向) "
"的机器人必须朝着驱动的方向转动，而使用被称为完全驱动器的麦克纳姆驱动底盘的机器人无需先转弯就可以向任何方向移动。上图机器人的车轮上具有滚轮，而这些滚轮使驱动力以45度角施加，而不是像传统驱动那样笔直向前。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:25
msgid ""
"When viewed from the top, the rollers on a mecanum drivetrain should form an"
" 'X' pattern. This results in the force vectors (when driving the wheel "
"forward) on the front two wheels pointing forward and inward and the rear "
"two wheels pointing forward and outward. By spinning the wheels in different"
" directions, various components of the force vectors cancel out, resulting "
"in the desired robot movement. A quick chart of different movements has been"
" provided below, drawing out the force vectors for each of these motions may"
" help in understanding how these drivetrains work. By varying the speeds of "
"the wheels in addition to the direction, movements can be combined resulting"
" in translation in any direction and rotation, simultaneously."
msgstr ""
"从顶部看，麦克纳姆底盘上的滚轮应形成 \"X\" 型。这导致 (在向前驱动车轮时) "
"前两个车轮的力矢量指向前和内，而后两个车轮的力矢量指向前和外。通过沿不同方向旋转车轮，力矢量的一些分量会抵消，从而使机器人实现所需的运动。下面提供了不同运动的快速图表，其中有这些运动中的力矢量。这可能有助于理解这些底盘的工作方式。通过改变方向以外的车轮速度，机器人可以向任何方向平移并旋转。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:28
msgid "Drive Class Conventions"
msgstr "驱动类惯例"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:31
msgid "Motor Inversion"
msgstr "电机反转"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:38
msgid ""
"When driving robots, it is often desirable to manipulate the joystick inputs"
" such that the robot has finer control at low speeds while still using the "
"full output range. One way to accomplish this is by squaring the joystick "
"input, then reapplying the sign. By default the Differential Drive class "
"will square the inputs. If this is not desired (e.g. if passing values in "
"from a PIDController), use one of the drive methods with the squaredInputs "
"parameter and set it to false."
msgstr ""
"在驱动机器人时，通常需要使用手柄输入，使机器人在仍然能使用全部输出范围的情况下在低速时具有更好的控制。实现此目的的一种方法是对操纵杆输入进行平方运算，然后重新应用信号。默认情况下，Differential"
" Drive 类将对输入进行平方运算。如果不希望这样做 (例如从PID控制器传递值)，那么需要使用一个带有 squaredInputs "
"参数的驱动方法并将这个参数的值设置为 false 。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:51
msgid "Motor Safety"
msgstr "电机安全"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:53
msgid ""
"Motor Safety is a mechanism in WPILib that takes the concept of a watchdog "
"and breaks it out into one watchdog (Motor Safety timer) for each individual"
" actuator. Note that this protection mechanism is in addition to the System "
"Watchdog which is controlled by the Network Communications code and the FPGA"
" and will disable all actuator outputs if it does not receive a valid data "
"packet for 125ms."
msgstr ""
"Motor Safety 是 WPILib 中的一种机制，它使用\"看门狗\"的概念并将其分解为给每个单独的执行器分配一个\"看门狗\" "
"(电机安全计时器) 。请注意，此保护机制是系统监视程序的补充。系统监视程序由网络通信代码和 FPGA "
"控制。如果在125毫秒内未收到有效数据包，它将禁用所有执行器输出。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:55
msgid ""
"The purpose of the Motor Safety mechanism is the same as the purpose of a "
"watchdog timer, to disable mechanisms which may cause harm to themselves, "
"people or property if the code locks up and does not properly update the "
"actuator output. Motor Safety breaks this concept out on a per actuator "
"basis so that you can appropriately determine where it is necessary and "
"where it is not. Examples of mechanisms that should have motor safety "
"enabled are systems like drive trains and arms. If these systems get latched"
" on a particular value they could cause damage to their environment or "
"themselves. An example of a mechanism that may not need motor safety is a "
"spinning flywheel for a shooter. If this mechanism gets latched on a "
"particular value it will simply continue spinning until the robot is "
"disabled. By default Motor Safety is enabled for RobotDrive, "
"DifferentialDrive, KilloughDrive, and MecanumDrive objects and disabled for "
"all other motor controllers and servos."
msgstr ""
"Motor Safety 机制的目的与监视定时器的目的相同，即在代码锁定或未正确更新执行器输出时，禁用可能会对自身、人员或财产造成伤害的机制。Motor"
" Safety 在每个执行器上部署突破了这一概念，因此您可以适当地确定在哪些地方有必要使用，哪些没有必要。例如，像底盘和机械臂这样的系统应该启用 "
"Motor Safety 来保证安全。如果这些系统锁定在特定值上，则可能会对周围或自身造成破坏。而射球装置的飞轮就不需要 Motor Safety "
"。如果此飞轮锁定在特定值上，它将继续旋转直到机器人被禁用。默认情况下，RobotDrive 对象的 Motor Safety "
"是启用的，而所有其他速度控制器和伺服是禁用的。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:57
msgid ""
"The Motor Safety feature operates by maintaining a timer that tracks how "
"long it has been since the feed() method has been called for that actuator. "
"Code in the Driver Station class initiates a comparison of these timers to "
"the timeout values for any actuator with safety enabled every 5 received "
"packets (100ms nominal). The set() methods of each motor controller class "
"and the set() and setAngle() methods of the servo class call feed() to "
"indicate that the output of the actuator has been updated."
msgstr ""
"Motor Safety功 能通过维持计时器来运行，该计时器跟踪自从对该执行器调用feed() 方法以来已有多长时间。Driver Station "
"类中的代码每收到5个包 (名义上 100ms)，就会对这些计时器超时值进行比较。每个速度控制器类的set() 方法以及伺服类的 set() 和 "
"setAngle() 方法调用 feed() 来指示执行器的输出已被更新。"
