# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Demet T <dtumkaya19@ku.edu.tr>, 2020
# Müfit ALKAYA <mufit.alkaya@tfo.k12.tr>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-17 16:43+0000\n"
"PO-Revision-Date: 2020-06-26 02:40+0000\n"
"Last-Translator: Müfit ALKAYA <mufit.alkaya@tfo.k12.tr>, 2021\n"
"Language-Team: Turkish (Turkey) (https://www.transifex.com/wpilib/teams/109324/tr_TR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: tr_TR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/pose.rst:2
msgid "Translation, Rotation, and Pose"
msgstr "Ötelenme, Dönme ve Poz"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/pose.rst:5
msgid "Translation"
msgstr "Ötelenme"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/pose.rst:7
msgid ""
"Translation in 2 dimensions is represented by WPILib's ``Translation2d`` "
"class (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/wpilibj/geometry/Translation2d.html>`__,"
" `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc_1_1Translation2d.html>`__)."
" This class has an x and y component, representing the point :math:`(x, y)` "
"or the vector :math:`\\begin{bmatrix}x \\\\ y \\end{bmatrix}` on a "
"2-dimensional coordinate system."
msgstr ""
"2 boyutlu çeviri, WPILib'in ``Translation2d`` sınıfı (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/wpilibj/geometry/Translation2d.html>`"
" __, `C ++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc_1_1Translation2d.html>`"
" __) ile temsil edilir. Bu sınıf, 2 boyutlu bir koordinatta noktayı temsil "
"eden bir x ve y bileşenine sahiptir: math: `(x, y)` veya vector: math: `\\ "
"begin {bmatrix} x \\\\ y \\ end {bmatrix}` sistemi."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/pose.rst:9
msgid ""
"You can get the distance to another ``Translation2d`` object by using the "
"``getDistance(Translation2d other)``, which returns the distance to another "
"Translation2d by using the Pythagorean theorem."
msgstr ""
"Pisagor teoremini kullanarak mesafeyi başka bir Translation2d'ye döndüren "
"``getDistance(Translation2d other)`` kullanarak başka bir ``Translation2d`` "
"nesnesine olan mesafeyi elde edebilirsiniz."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/pose.rst:11
msgid ""
"``Translation2d`` uses the C++ Units library. If you're planning on using "
"other WPILib classes that use ``Translation2d`` in Java, such as the "
"trajectory generator, make sure to use meters."
msgstr ""
"``Translation2d``, C++ Units kütüphanesini kullanır. Yörünge oluşturucu gibi"
" Java'da ``Translation2d`` kullanan diğer WPILib sınıflarını kullanmayı "
"planlıyorsanız, metre ölçüsünü kullandığınızdan emin olun."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/pose.rst:14
msgid "Rotation"
msgstr "Dönme"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/pose.rst:16
msgid ""
"Rotation in 2 dimensions is representated by WPILib's ``Rotation2d`` class "
"(`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/wpilibj/geometry/Rotation2d.html>`__,"
" `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc_1_1Rotation2d.html>`__)."
" This class has an angle component, which represents the robot's rotation "
"relative to an axis on a 2-dimensional coordinate system. Positive rotations"
" are counterclockwise."
msgstr ""
"2 boyutlu rotasyon, WPILib'in ``Rotation2d``sınıfı (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/wpilibj/geometry/Rotation2d.html>`"
" __, `C ++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc_1_1Rotation2d.html>`"
" __) tarafından temsil edilir. Bu sınıf, robotun 2 boyutlu koordinat "
"sistemindeki bir eksene göre dönüşünü temsil eden bir açı bileşenine "
"sahiptir. Pozitif dönüşler saat yönünün tersidir."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/pose.rst:18
msgid ""
"``Rotation2d`` uses the C++ Units library. The contructor in Java accepts "
"either the angle in radians, or the sine and cosine of the angle, but the "
"``fromDegrees`` method will construct a ``Rotation2d`` object from degrees."
msgstr ""
"``Rotation2d``, C++ Units kütüphanesini kullanır. Java'daki yapıcı ya radyan"
" cinsinden açıyı ya da açının sinüsünü ve kosinüsünü kabul eder, ancak "
"``fromDegrees`` yöntemi derecelerden bir ``Rotation2d`` nesnesi "
"oluşturacaktır."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/pose.rst:21
msgid "Pose"
msgstr "Poz"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/pose.rst:23
msgid ""
"Pose is a combination of both translation and rotation and is represented by"
" the ``Pose2d`` class (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/wpilibj/geometry/Pose2d.html>`__,"
" `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc_1_1Pose2d.html>`__)."
" It can be used to describe the pose of your robot in the field coordinate "
"system, or the pose of objects, such as vision targets, relative to your "
"robot in the robot coordinate system. ``Pose2d`` can also represent the "
"vector :math:`\\begin{bmatrix}x \\\\ y \\\\ \\theta\\end{bmatrix}`."
msgstr ""
"Pose, hem çevirinin hem de döndürmenin bir kombinasyonudur ve ``Pose2d`` "
"sınıfı (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/wpilibj/geometry/Pose2d.html>`"
" __, `C ++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc_1_1Pose2d.html>`"
" __) ile temsil edilir. Alan koordinat sistemindeki robotunuzun pozunu veya "
"robot koordinat sistemindeki robotunuza göre görme hedefleri gibi nesnelerin"
" pozunu tanımlamak için kullanılabilir. ``Pose2d`` aynı zamanda matematik: "
"`\\ begin {bmatrix} x \\\\ y \\\\ \\ theta \\ end {bmatrix} 'vektörünü de "
"temsil edebilir."
